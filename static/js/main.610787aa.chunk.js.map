{"version":3,"sources":["context.js","Component/contacts/Contact.js","Component/contacts/Contacts.js","Component/layout/Header.js","Component/layout/TextInputGroup.js","Component/contacts/AddContact.js","Component/contacts/EditContact.js","Component/pages/About.js","Component/pages/NotFound.js","Component/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","padding","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.610787aa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact =>\r\n                    contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n\r\n            case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact =>\r\n                    contact.id === action.payload.id\r\n                    ?(contact = action.payload) \r\n                    :contact\r\n                    ) \r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state =>\r\n            reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount(){\r\n       const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n       this.setState({contacts: res.data});\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer; ","import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport {Consumer} from '../../context';  \r\n\r\n \r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  // static propTypes = {\r\n  //   name: PropTypes.string.isRequired,\r\n  //   email: PropTypes.string.isRequired,\r\n  //   phone: PropTypes.string.isRequired\r\n  // };\r\n\r\n  // onShowClick = (e)=>{\r\n  //    this.setState({showContactInfo: !this.state.showContactInfo})\r\n  // };\r\n\r\n    onDeleteClick= async(id,dispatch)=>{\r\n      try{\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    \r\n      dispatch({type:'DELETE_CONTACT', payload: id});\r\n    } catch(e) {\r\n      dispatch({type:'DELETE_CONTACT', payload: id});\r\n    }\r\n    };\r\n\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n          return(\r\n            <div className=\"card card-body mb-3\">\r\n            <h4>{name}\r\n              <i onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })}\r\n                className=\"fas fa-sort-down\" style={{ cursor: \"pointer\" }} />\r\n              <i\r\n                className=\"fas fa-times\"\r\n                style={{ cursor: \"pointer\", float: \"right\", color: \"blue\" }}\r\n                onClick={this.onDeleteClick.bind(this,id,dispatch)}\r\n              />\r\n              <Link to={`contact/edit/${id}`}>\r\n               <i \r\n               className=\"fas fa-pencil-alt\"\r\n               style={{\r\n                 cursor:'pointer',\r\n                 float:'right',\r\n                 color:'black',\r\n                 marginRight:'1rem'\r\n               }}\r\n               />\r\n              </Link>\r\n\r\n            </h4>\r\n            {showContactInfo ? (\r\n              <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">Email: {email}</li>\r\n                <li className=\"list-group-item\">Phone: {phone}</li>\r\n              </ul>) : null}\r\n    \r\n          </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n  \r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n\r\n   \r\n\r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value =>{\r\n                    const {contacts} = value;\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                            <span className=\"text-danger\">Contact</span> List\r\n                            </h1>\r\n                        {contacts.map(contact => (\r\n                            <Contact\r\n                                key={contact.id}\r\n                                contact={contact}\r\n                            />\r\n                        ))}\r\n                    </React.Fragment> \r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a className=\"navbar-brand\" href=\"#\">{branding}</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n    <ul className=\"navbar-nav\">\r\n      {/* <li className=\"nav-item \">\r\n        <Link to=\"/\"> Home <span className=\"sr-only\">(current)</span></Link>\r\n      </li> */}\r\n      <li className=\"nav-item\" style={{ padding:'7px'}}>\r\n      <Link to=\"/\" className=\"nav-link\"> \r\n      <i className=\"fas fa-home\"/> Home</Link>\r\n      </li>\r\n\r\n      <li className=\"nav-item\" style={{ padding:'7px'}}>\r\n      <Link to=\"/contact/add\" className=\"nav-link\"> \r\n      <i className=\"fas fa-plus\"/> Add</Link>\r\n      </li>\r\n      \r\n      <li className=\"nav-item\" style={{ padding:'7px'}}>\r\n      <Link to=\"/about\" className=\"nav-link\"> \r\n      <i className=\"fas fa-question\"/> About</Link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return ( \r\n        <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input\r\n            type={type}\r\n            name={name}\r\n            className={classnames('form-control form-control-lg',{\r\n                'is-invalid': error\r\n            })}\r\n            placeholder={placeholder}\r\n            value={value}\r\n            onChange={onChange}\r\n        />\r\n        {error && <div className=\"invalid-feedback\">{error}</div> }\r\n        \r\n    </div>\r\n     );\r\n};\r\n\r\nTextInputGroup.propTypes={\r\n    label:PropTypes.string.isRequired,\r\n    name:PropTypes.string.isRequired,\r\n    placeholder:PropTypes.string.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n    type:PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n    \r\n};\r\n\r\nTextInputGroup.defaultProps ={\r\n    type:'text'\r\n}\r\n \r\nexport default TextInputGroup; ","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check for Errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required' } });\r\n            return;\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is required' } });\r\n            return;\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required' } });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n           \r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n       const res= await axios.post('https://jsonplaceholder.typicode.com/users',newContact)\r\n        \r\n       dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n       \r\n\r\n        // Clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Add Contact\r\n            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name...\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n\r\n\r\n\r\n\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Add Contact\"\r\n                                        className=\"btn btn-light btn-block \"\r\n                                    />\r\n\r\n                                </form>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        const res= await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n \r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check for Errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required' } });\r\n            return;\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is required' } });\r\n            return;\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required' } });\r\n            return;\r\n        }\r\n        const updContact={\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        const {id}= this.props.match.params;\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n\r\n        dispatch({type:'UPDATE_CONTACT', payload: res.data});\r\n\r\n        // Clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Edit Contact\r\n            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name...\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n\r\n\r\n\r\n\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Update Contact\"\r\n                                        className=\"btn btn-light btn-block \"\r\n                                    />\r\n\r\n                                </form>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\n\r\n\r\nexport default() => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default()=>{\r\n    return(\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n           <span className=\"text-danger\"> 404 </span> Page Not Found\r\n            </h1>\r\n        \r\n        <p className=\"lead\">\r\n        Sorry, that page does not exist\r\n        </p>\r\n        \r\n        </div>\r\n    );\r\n};","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n    state = { \r\n        title:'',\r\n        body:''\r\n     }\r\n    \r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            title:data.title,\r\n            body:data.body\r\n        }));\r\n    }\r\n\r\n    // componentWillMount(){\r\n    //     console.log('componentWillMount...');\r\n    // }\r\n    \r\n    // componentWillMount(){\r\n    //     console.log('componentWillMount...');\r\n    // }\r\n    \r\n    // componentDidUpdate(){\r\n    //     console.log('componentDidUpdate...');\r\n    // }\r\n\r\n    // componentWillUpdate(){\r\n    //     console.log('componentWillUpdate...');\r\n    // }\r\n\r\n    // componentWillReceiveProps(nextProps, nextState){\r\n    //     console.log('componentWillRecieveProps...');\r\n    // }\r\n\r\n    // static getDeriveStateFromProps(nextProps, prevState){\r\n    //     return {\r\n    //         test:'something'\r\n    //     };\r\n    // }\r\n\r\n    // getSnapshotBeforeUpdate(prevProps, prevState){\r\n    //     console.log('getSnapshotBeforeUpdate...');\r\n    // }\r\n     \r\n\r\n    render() { \r\n        const {title,body} =this.state;\r\n        return (\r\n            <div>\r\n               <h1>{title}</h1>\r\n               <p>{body}</p> \r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default Test;","import React, { Component } from 'react';\r\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Contacts from './Component/contacts/Contacts';\r\nimport Header from './Component/layout/Header';\r\nimport AddContact from './Component/contacts/AddContact';\r\nimport EditContact from './Component/contacts/EditContact';\r\nimport About from './Component/pages/About';\r\nimport NotFound from './Component/pages/NotFound';\r\nimport Test from \"./Component/test/Test\";\r\nimport { Provider } from './context';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        <Router>\r\n      <div className=\"App\">\r\n        <Header branding=\"Contact Manager\" />\r\n        <div className=\"container\">\r\n         <Switch>\r\n           <Route exact path=\"/\" component={Contacts}/>\r\n           <Route exact path=\"/about\" component={About}/>\r\n           <Route exact path=\"/test\" component={Test}/>\r\n           <Route exact path=\"/contact/add\" component={AddContact}/>\r\n           <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\r\n           <Route component={NotFound} />\r\n         </Switch>\r\n        </div>\r\n      </div>\r\n      </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}